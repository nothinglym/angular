    AngularJS 指令


	AngularJS 通过被称为 指令 的新属性来扩展 HTML。

        AngularJS 通过内置的指令来为应用添加功能。

        AngularJS 允许你自定义指令。
 

        AngularJS 指令是扩展的 HTML 属性，带有前缀 ng-。

        ng-app 指令初始化一个 AngularJS 应用程序。

        ng-init 指令初始化应用程序数据。

        ng-model 指令把元素值（比如输入域的值）绑定到应用程序。


      ng-app 指令

      ng-app 指令定义了 AngularJS 应用程序的 根元素。

      ng-app 指令在网页加载完毕时会自动引导（自动初始化）应用程序。

      ng-app 如何通过一个值（比如 ng-app="myModule"）连接到代码模块。


     ng-init 指令

     ng-init 指令为 AngularJS 应用程序定义了 初始值。

     通常情况下，不使用 ng-init。您将使用一个控制器或模块来代替它。


     ng-model 指令

     ng-model 指令 绑定 HTML 元素 到应用程序数据。

     ng-model 指令也可以：

               为应用程序数据提供类型验证（number、email、required）。

               为应用程序数据提供状态（invalid、dirty、touched、error）。

               为 HTML 元素提供 CSS 类。

               绑定 HTML 元素到 HTML 表单



     ng-repeat 指令

     ng-repeat 指令对于集合中（数组中）的每个项会 克隆一次 HTML 元素。
 


    创建自定义的指令

    除了 AngularJS 内置的指令外，我们还可以创建自定义指令。

    你可以使用 .directive 函数来添加自定义的指令。

    要调用自定义指令，HTML 元素上需要添加自定义指令名。

    使用驼峰法来命名一个指令， runoobDirective, 但在使用它时需要以 - 分割, runoob-directive:

例如1.
         
<div ng-app="" ng-init="firstName='John'">
 
     <p>在输入框中尝试输入：</p>
     <p>姓名：<input type="text" ng-model="firstName"></p>
     <p>你输入的为： {{ firstName }}</p>
 
</div>

例2:

使用 ng-init 不是很常见。您将在控制器一章中学习到一个更好的初始化数据的方式。

<div ng-app="" ng-init="quantity=1;price=5">
 
<h2>价格计算器</h2>
 
数量： <input type="number"    ng-model="quantity">
价格： <input type="number" ng-model="price">
 
<p><b>总价：</b> {{ quantity * price }}</p>
 
</div>

例3：
ng-repeat 指令会重复一个 HTML 元素：

<div ng-app="" ng-init="names=['Jani','Hege','Kai']">
  <p>使用 ng-repeat 来循环数组</p>
  <ul>
    <li ng-repeat="x in names">
      {{ x }}
    </li>
  </ul>
</div>
